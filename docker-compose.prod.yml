version: '3'

# 管轄外
#
# up前
# - ecsのdockerコンテキストを作っておく
# - RDS
#   - 作っておく
# - SecretsManager
#   - RDSの鍵管理
#   - ARNをここに書く
# - Route53
#   - ドメインを取る
# - Certificate Manager
#   - 証明書を取る
#   - ARNをここに書く
# - ECR
#   - リポジトリ作り
#   - server,frontのイメージをpushしておく
# up後
# - Route53
#   - ドメインをALBに紐付ける
# - VPC
#   - RDSが所属するセキュリティグループのインバウンドルールに、
#     ECSが所属するセキュリティグループからのMYSQL/Auroraタイプの通信を許可する
# - ExecuteCommandでserverコンテナに入ってbin/rails db:create, migrate

services:
  server:
    image: "645943600532.dkr.ecr.us-east-1.amazonaws.com/server:latest"
    command: "bundle exec puma -e production -C config/puma.rb"
    environment:
      RAILS_ENV: production
    secrets:
      - server_secret
    x-aws-role: &aws-role
      Version: '2012-10-17'
      Statement:
      - Effect: Allow
        Action:
          - ssmmessages:CreateControlChannel
          - ssmmessages:CreateDataChannel
          - ssmmessages:OpenControlChannel
          - ssmmessages:OpenDataChannel
        Resource: '*'
  front:
    image: "645943600532.dkr.ecr.us-east-1.amazonaws.com/front:latest"
    ports:
      - "80:80"
    depends_on:
      - server
    x-aws-role: *aws-role

secrets:
  server_secret:
    name: "arn:aws:secretsmanager:us-east-1:645943600532:secret:searchsearch-Zi3oel"
    external: true

x-aws-cloudformation:
  Resources:
    ServerService:
      Properties:
        EnableExecuteCommand: true
    FrontService:
      Properties:
        EnableExecuteCommand: true
    FrontTCP80Listener:
      # リスナーはHTTPSの443, ターゲットグループはHTTPの80 にするためにリスナー側を上書きしている
      Properties:
        Certificates:
          - CertificateArn: "arn:aws:acm:us-east-1:645943600532:certificate/2ba69441-ee8e-41a8-8208-66899e57e5e7"
        Protocol: HTTPS
        Port: 443

